import React from 'react';
import { GetStaticProps } from 'next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import Link from 'next/link';
import {
    ChefHat,
    Sparkles,
    BookOpen,
    Star,
    Play,
    ArrowRight,
    Clock,
    Users
} from 'lucide-react';

// Simple interfaces
interface Recipe {
    id: number;
    title: string;
    description: string;
    imageUrl: string;
    cookingTime: number;
    difficulty: 'EASY' | 'MEDIUM' | 'HARD';
    rating: number;
    servings: number;
    calories: number;
}

interface Stats {
    totalRecipes: number;
    totalUsers: number;
    totalLessons: number;
    avgRating: number;
}

interface HomePageProps {
    featuredRecipes: Recipe[];
    stats: Stats;
}

const HomePage: React.FC<HomePageProps> = ({ featuredRecipes, stats }) => {
    const features = [
        {
            icon: 'ü§ñ',
            title: 'AI Th√¥ng Minh',
            description: 'Tr·ª£ l√Ω AI gi√∫p t·∫°o c√¥ng th·ª©c, ph√¢n t√≠ch nguy√™n li·ªáu v√† g·ª£i √Ω m√≥n ƒÉn ph√π h·ª£p'
        },
        {
            icon: 'üìö',
            title: 'H·ªçc N·∫•u ƒÇn',
            description: 'Kh√≥a h·ªçc t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao v·ªõi video HD v√† h∆∞·ªõng d·∫´n chi ti·∫øt'
        },
        {
            icon: 'üé§',
            title: 'ƒêi·ªÅu Khi·ªÉn Gi·ªçng N√≥i',
            description: 'N·∫•u ƒÉn r·∫£nh tay v·ªõi tr·ª£ l√Ω gi·ªçng n√≥i th√¥ng minh, h·ªó tr·ª£ ti·∫øng Vi·ªát'
        },
        {
            icon: 'üåç',
            title: '·∫®m Th·ª±c V√πng Mi·ªÅn',
            description: 'Kh√°m ph√° ƒë·∫∑c s·∫£n 3 mi·ªÅn B·∫Øc - Trung - Nam v√† c√°c m√≥n qu·ªëc t·∫ø'
        }
    ];

    return (
        <div className="min-h-screen bg-white">
            {/* Hero Section */}
            <section className="relative bg-gradient-to-br from-orange-50 via-pink-50 to-purple-50 py-20">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="text-center">
                        <div className="mb-8">
                            <div className="inline-flex items-center justify-center p-2 bg-white rounded-full shadow-lg mb-6">
                                <ChefHat className="h-12 w-12 text-orange-500" />
                            </div>

                            <h1 className="text-4xl lg:text-6xl font-bold mb-6">
                                <span className="bg-gradient-to-r from-orange-500 via-pink-500 to-purple-500 bg-clip-text text-transparent">
                                    Smart Cooking
                                </span>
                                <br />
                                <span className="text-gray-900">v·ªõi AI</span>
                            </h1>

                            <p className="text-xl text-gray-600 max-w-3xl mx-auto mb-8">
                                Tr·∫£i nghi·ªám n·∫•u ƒÉn th√¥ng minh v·ªõi s·ª± h·ªó tr·ª£ c·ªßa AI.
                                Kh√°m ph√° h√†ng ng√†n c√¥ng th·ª©c, h·ªçc t·ª´ chuy√™n gia v√† t·∫°o ra nh·ªØng m√≥n ƒÉn tuy·ªát v·ªùi.
                            </p>
                        </div>

                        <div className="flex flex-col sm:flex-row gap-4 justify-center mb-12">
                            <button className="bg-gradient-to-r from-orange-500 to-pink-500 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:shadow-lg transition-shadow">
                                <Sparkles className="inline h-5 w-5 mr-2" />
                                B·∫Øt ƒê·∫ßu V·ªõi AI
                            </button>

                            <button className="border border-gray-300 text-gray-700 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-gray-50 transition-colors">
                                <Play className="inline h-5 w-5 mr-2" />
                                Xem Demo
                            </button>
                        </div>

                        {/* Stats */}
                        <div className="grid grid-cols-2 lg:grid-cols-4 gap-6 max-w-4xl mx-auto">
                            <div className="bg-white/70 backdrop-blur-md rounded-lg p-6">
                                <div className="text-3xl font-bold text-orange-600 mb-2">
                                    {stats.totalRecipes.toLocaleString()}+
                                </div>
                                <div className="text-gray-600">C√¥ng th·ª©c</div>
                            </div>

                            <div className="bg-white/70 backdrop-blur-md rounded-lg p-6">
                                <div className="text-3xl font-bold text-pink-600 mb-2">
                                    {stats.totalUsers.toLocaleString()}+
                                </div>
                                <div className="text-gray-600">Ng∆∞·ªùi d√πng</div>
                            </div>

                            <div className="bg-white/70 backdrop-blur-md rounded-lg p-6">
                                <div className="text-3xl font-bold text-purple-600 mb-2">
                                    {stats.totalLessons}+
                                </div>
                                <div className="text-gray-600">B√†i h·ªçc</div>
                            </div>

                            <div className="bg-white/70 backdrop-blur-md rounded-lg p-6">
                                <div className="flex items-center justify-center mb-2">
                                    <span className="text-3xl font-bold text-yellow-600">{stats.avgRating}</span>
                                    <Star className="h-6 w-6 text-yellow-500 ml-1 fill-current" />
                                </div>
                                <div className="text-gray-600">ƒê√°nh gi√°</div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Features Section */}
            <section className="py-20 bg-white">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="text-center mb-16">
                        <h2 className="text-4xl font-bold text-gray-900 mb-4">
                            T√≠nh nƒÉng n·ªïi b·∫≠t
                        </h2>
                        <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                            Smart Cooking AI mang ƒë·∫øn nh·ªØng c√¥ng ngh·ªá ti√™n ti·∫øn nh·∫•t ƒë·ªÉ h·ªó tr·ª£ b·∫°n trong vi·ªác n·∫•u ƒÉn
                        </p>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                        {features.map((feature, index) => (
                            <div key={index} className="bg-white rounded-lg shadow-md p-6 text-center hover:shadow-lg transition-shadow">
                                <div className="text-4xl mb-4">{feature.icon}</div>
                                <h3 className="text-xl font-semibold text-gray-900 mb-3">
                                    {feature.title}
                                </h3>
                                <p className="text-gray-600 leading-relaxed">
                                    {feature.description}
                                </p>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Featured Recipes Section */}
            <section className="py-20 bg-gray-50">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="flex items-center justify-between mb-12">
                        <div>
                            <h2 className="text-4xl font-bold text-gray-900 mb-4">
                                C√¥ng th·ª©c n·ªïi b·∫≠t
                            </h2>
                            <p className="text-xl text-gray-600">
                                Nh·ªØng m√≥n ƒÉn ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t tu·∫ßn n√†y
                            </p>
                        </div>

                        <Link href="/recipes" className="inline-flex items-center px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors">
                            Xem t·∫•t c·∫£
                            <ArrowRight className="h-4 w-4 ml-2" />
                        </Link>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                        {featuredRecipes.map((recipe) => (
                            <div key={recipe.id} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                                <div className="h-48 bg-gray-200 flex items-center justify-center">
                                    <span className="text-gray-500">H√¨nh ·∫£nh m√≥n ƒÉn</span>
                                </div>

                                <div className="p-6">
                                    <h3 className="text-xl font-semibold text-gray-900 mb-2">
                                        {recipe.title}
                                    </h3>

                                    <p className="text-gray-600 mb-4 line-clamp-2">
                                        {recipe.description}
                                    </p>

                                    <div className="flex items-center justify-between text-sm text-gray-500 mb-4">
                                        <div className="flex items-center">
                                            <Clock className="h-4 w-4 mr-1" />
                                            {recipe.cookingTime} ph√∫t
                                        </div>

                                        <div className="flex items-center">
                                            <Users className="h-4 w-4 mr-1" />
                                            {recipe.servings} ng∆∞·ªùi
                                        </div>

                                        <div className="flex items-center">
                                            <Star className="h-4 w-4 mr-1 text-yellow-500 fill-current" />
                                            {recipe.rating}
                                        </div>
                                    </div>

                                    <div className="flex items-center justify-between">
                                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${recipe.difficulty === 'EASY' ? 'bg-green-100 text-green-800' :
                                                recipe.difficulty === 'MEDIUM' ? 'bg-yellow-100 text-yellow-800' :
                                                    'bg-red-100 text-red-800'
                                            }`}>
                                            {recipe.difficulty === 'EASY' ? 'D·ªÖ' :
                                                recipe.difficulty === 'MEDIUM' ? 'Trung b√¨nh' : 'Kh√≥'}
                                        </span>

                                        <span className="text-sm text-gray-500">
                                            {recipe.calories} cal
                                        </span>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <section className="py-20 bg-gradient-to-r from-orange-500 via-pink-500 to-purple-500">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
                    <h2 className="text-4xl lg:text-5xl font-bold text-white mb-6">
                        S·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh n·∫•u ƒÉn?
                    </h2>

                    <p className="text-xl text-white/90 max-w-2xl mx-auto mb-8">
                        Tham gia c·ªông ƒë·ªìng h√†ng ng√†n ng∆∞·ªùi y√™u n·∫•u ƒÉn v√† kh√°m ph√° th·∫ø gi·ªõi ·∫©m th·ª±c c√πng AI
                    </p>

                    <div className="flex flex-col sm:flex-row gap-4 justify-center">
                        <button className="bg-white text-gray-900 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-gray-100 transition-colors">
                            <ChefHat className="inline h-5 w-5 mr-2" />
                            ƒêƒÉng k√Ω mi·ªÖn ph√≠
                        </button>

                        <button className="border border-white text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-white/10 transition-colors">
                            <BookOpen className="inline h-5 w-5 mr-2" />
                            T√¨m hi·ªÉu th√™m
                        </button>
                    </div>
                </div>
            </section>
        </div>
    );
};

export default HomePage;

export const getStaticProps: GetStaticProps = async ({ locale }) => {
    const featuredRecipes: Recipe[] = [
        {
            id: 1,
            title: 'Ph·ªü B√≤ H√† N·ªôi',
            description: 'M√≥n ph·ªü truy·ªÅn th·ªëng v·ªõi n∆∞·ªõc d√πng ƒë·∫≠m ƒë√†, th·ªãt b√≤ t∆∞∆°i ngon',
            imageUrl: '/images/pho-bo.jpg',
            cookingTime: 120,
            difficulty: 'MEDIUM',
            rating: 4.8,
            servings: 4,
            calories: 350
        },
        {
            id: 2,
            title: 'B√°nh M√¨ Vi·ªát Nam',
            description: 'B√°nh m√¨ gi√≤n r·ª•m v·ªõi nh√¢n ƒëa d·∫°ng, ƒë·∫∑c tr∆∞ng ·∫©m th·ª±c ƒë∆∞·ªùng ph·ªë',
            imageUrl: '/images/banh-mi.jpg',
            cookingTime: 30,
            difficulty: 'EASY',
            rating: 4.6,
            servings: 2,
            calories: 280
        },
        {
            id: 3,
            title: 'C∆°m T·∫•m S√†i G√≤n',
            description: 'C∆°m t·∫•m s∆∞·ªùn n∆∞·ªõng v·ªõi ƒë·∫ßy ƒë·ªß rau s·ªëng v√† n∆∞·ªõc m·∫Øm pha',
            imageUrl: '/images/com-tam.jpg',
            cookingTime: 45,
            difficulty: 'MEDIUM',
            rating: 4.7,
            servings: 2,
            calories: 420
        }
    ];

    const stats: Stats = {
        totalRecipes: 15420,
        totalUsers: 8650,
        totalLessons: 156,
        avgRating: 4.8
    };

    return {
        props: {
            ...(await serverSideTranslations(locale ?? 'vi', ['common'])),
            featuredRecipes,
            stats
        },
        revalidate: 3600,
    };
};
