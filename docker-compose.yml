version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: smart-cooking-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
    networks:
      - smart-cooking-network

  redis:
    image: redis:7-alpine
    container_name: smart-cooking-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smart-cooking-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart-cooking-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/smart-cooking-ai?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - smart-cooking-network

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: smart-cooking-ai-service
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - PORT=5001
    volumes:
      - ./ai-service/models:/app/models
    networks:
      - smart-cooking-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart-cooking-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_AI_SERVICE_URL=http://localhost:5001
    depends_on:
      - backend
      - ai-service
    networks:
      - smart-cooking-network

  nginx:
    image: nginx:alpine
    container_name: smart-cooking-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - ai-service
    networks:
      - smart-cooking-network

volumes:
  mongodb_data:
  redis_data:

networks:
  smart-cooking-network:
    driver: bridge
