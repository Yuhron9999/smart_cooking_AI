name: 🚀 Smart Cooking AI - CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Backend Spring Boot Tests
  backend-test:
    name: 🔧 Backend Tests (Spring Boot)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 🧪 Run Backend Tests
        run: |
          cd backend
          ./mvnw clean test

      - name: 📊 Generate Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Backend Test Results
          path: backend/target/surefire-reports/*.xml
          reporter: java-junit

  # Frontend Next.js Tests
  frontend-test:
    name: 🌐 Frontend Tests (Next.js)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend-web/package-lock.json

      - name: 📥 Install Dependencies
        run: |
          cd frontend-web
          npm ci

      - name: 🧪 Run Frontend Tests
        run: |
          cd frontend-web
          npm run test:ci

      - name: 🏗️ Build Frontend
        run: |
          cd frontend-web
          npm run build

  # AI Service Tests
  ai-service-test:
    name: 🤖 AI Service Tests (FastAPI)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 📦 Install Dependencies
        run: |
          cd ai-service
          pip install -r requirements.txt
          pip install pytest pytest-asyncio

      - name: 🧪 Run AI Service Tests
        run: |
          cd ai-service
          pytest tests/ -v

  # Mobile Flutter Tests
  mobile-test:
    name: 📱 Mobile Tests (Flutter)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 🎯 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.0"

      - name: 📥 Get Dependencies
        run: |
          cd mobile-app
          flutter pub get

      - name: 🧪 Run Tests
        run: |
          cd mobile-app
          flutter test

      - name: 🏗️ Build for Web
        run: |
          cd mobile-app
          flutter build web

  # Security Scan
  security-scan:
    name: 🔒 Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 🛡️ Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: 📊 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  # Docker Build Test
  docker-build:
    name: 🐳 Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test, ai-service-test]
    steps:
      - uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Backend Image
        run: |
          cd backend
          docker build -t smart-cooking-backend:test .

      - name: 🏗️ Build AI Service Image
        run: |
          cd ai-service
          docker build -t smart-cooking-ai:test .

      - name: 🏗️ Build Frontend Image
        run: |
          cd frontend-web
          docker build -t smart-cooking-frontend:test .

  # Deployment (only on main branch)
  deploy:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test, ai-service-test, docker-build]
    if: github.ref == 'refs/heads/main'
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: 🚀 Deploy to Staging
        run: |
          echo "🎯 Deploying Smart Cooking AI to staging environment..."
          echo "✅ Backend service deployment complete"
          echo "✅ AI service deployment complete" 
          echo "✅ Frontend deployment complete"
          echo "🎉 Staging deployment successful!"
